

Microchip Technology PIC LITE Macro Assembler V1.11 build 48931 
                                                                                               Thu Jan 17 12:26:12 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 48931
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 48931"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F690
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 46 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    43  0000                     INDF equ 00h ;# 
    44                           # 52 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    45  0001                     TMR0 equ 01h ;# 
    46                           # 58 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    47  0002                     PCL equ 02h ;# 
    48                           # 64 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    49  0003                     STATUS equ 03h ;# 
    50                           # 151 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    51  0004                     FSR equ 04h ;# 
    52                           # 157 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    53  0005                     PORTA equ 05h ;# 
    54                           # 206 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    55  0006                     PORTB equ 06h ;# 
    56                           # 244 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    57  0007                     PORTC equ 07h ;# 
    58                           # 305 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    59  000A                     PCLATH equ 0Ah ;# 
    60                           # 311 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    61  000B                     INTCON equ 0Bh ;# 
    62                           # 372 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    63  000C                     PIR1 equ 0Ch ;# 
    64                           # 441 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    65  000D                     PIR2 equ 0Dh ;# 
    66                           # 479 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    67  000E                     TMR1 equ 0Eh ;# 
    68                           # 485 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    69  000E                     TMR1L equ 0Eh ;# 
    70                           # 491 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    71  000F                     TMR1H equ 0Fh ;# 
    72                           # 497 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    73  0010                     T1CON equ 010h ;# 
    74                           # 567 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    75  0011                     TMR2 equ 011h ;# 
    76                           # 573 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    77  0012                     T2CON equ 012h ;# 
    78                           # 643 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    79  0013                     SSPBUF equ 013h ;# 
    80                           # 649 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    81  0014                     SSPCON equ 014h ;# 
    82                           # 718 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    83  0015                     CCPR equ 015h ;# 
    84                           # 724 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    85  0015                     CCPR1L equ 015h ;# 
    86                           # 730 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    87  0016                     CCPR1H equ 016h ;# 
    88                           # 736 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    89  0017                     CCP1CON equ 017h ;# 
    90                           # 817 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    91  0018                     RCSTA equ 018h ;# 
    92                           # 878 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    93  0019                     TXREG equ 019h ;# 
    94                           # 884 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    95  001A                     RCREG equ 01Ah ;# 
    96                           # 890 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    97  001C                     PWM1CON equ 01Ch ;# 
    98                           # 959 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
    99  001D                     ECCPAS equ 01Dh ;# 
   100                           # 1040 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   101  001E                     ADRESH equ 01Eh ;# 
   102                           # 1046 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   103  001F                     ADCON0 equ 01Fh ;# 
   104                           # 1140 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   105  0081                     OPTION_REG equ 081h ;# 
   106                           # 1209 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   107  0085                     TRISA equ 085h ;# 
   108                           # 1258 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   109  0086                     TRISB equ 086h ;# 
   110                           # 1296 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   111  0087                     TRISC equ 087h ;# 
   112                           # 1357 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   113  008C                     PIE1 equ 08Ch ;# 
   114                           # 1426 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   115  008D                     PIE2 equ 08Dh ;# 
   116                           # 1464 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   117  008E                     PCON equ 08Eh ;# 
   118                           # 1502 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   119  008F                     OSCCON equ 08Fh ;# 
   120                           # 1566 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   121  0090                     OSCTUNE equ 090h ;# 
   122                           # 1617 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   123  0092                     PR2 equ 092h ;# 
   124                           # 1623 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   125  0093                     SSPADD equ 093h ;# 
   126                           # 1629 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   127  0093                     SSPMSK equ 093h ;# 
   128                           # 1634 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   129  0093                     MSK equ 093h ;# 
   130                           # 1750 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   131  0094                     SSPSTAT equ 094h ;# 
   132                           # 1918 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   133  0095                     WPUA equ 095h ;# 
   134                           # 1923 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   135  0095                     WPU equ 095h ;# 
   136                           # 2071 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   137  0096                     IOCA equ 096h ;# 
   138                           # 2076 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   139  0096                     IOC equ 096h ;# 
   140                           # 2244 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   141  0097                     WDTCON equ 097h ;# 
   142                           # 2296 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   143  0098                     TXSTA equ 098h ;# 
   144                           # 2366 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   145  0099                     SPBRG equ 099h ;# 
   146                           # 2427 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   147  009A                     SPBRGH equ 09Ah ;# 
   148                           # 2488 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   149  009B                     BAUDCTL equ 09Bh ;# 
   150                           # 2539 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   151  009E                     ADRESL equ 09Eh ;# 
   152                           # 2545 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   153  009F                     ADCON1 equ 09Fh ;# 
   154                           # 2586 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   155  010C                     EEDAT equ 010Ch ;# 
   156                           # 2591 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   157  010C                     EEDATA equ 010Ch ;# 
   158                           # 2597 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   159  010D                     EEADR equ 010Dh ;# 
   160                           # 2603 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   161  010E                     EEDATH equ 010Eh ;# 
   162                           # 2609 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   163  010F                     EEADRH equ 010Fh ;# 
   164                           # 2615 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   165  0115                     WPUB equ 0115h ;# 
   166                           # 2662 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   167  0116                     IOCB equ 0116h ;# 
   168                           # 2700 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   169  0118                     VRCON equ 0118h ;# 
   170                           # 2769 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   171  0119                     CM1CON0 equ 0119h ;# 
   172                           # 2833 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   173  011A                     CM2CON0 equ 011Ah ;# 
   174                           # 2897 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   175  011B                     CM2CON1 equ 011Bh ;# 
   176                           # 2935 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   177  011E                     ANSEL equ 011Eh ;# 
   178                           # 2996 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   179  011F                     ANSELH equ 011Fh ;# 
   180                           # 3033 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   181  018C                     EECON1 equ 018Ch ;# 
   182                           # 3077 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   183  018D                     EECON2 equ 018Dh ;# 
   184                           # 3083 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   185  019D                     PSTRCON equ 019Dh ;# 
   186                           # 3126 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f690.h"
   187  019E                     SRCON equ 019Eh ;# 
   188                           	FNCALL	_main,___awdiv
   189                           	FNCALL	_main,_printf
   190                           	FNCALL	_printf,_putch
   191                           	FNCALL	_printf,___lwdiv
   192                           	FNCALL	_printf,___lwmod
   193                           	FNROOT	_main
   194                           	FNCALL	intlevel1,_isr
   195                           	global	intlevel1
   196                           	FNROOT	intlevel1
   197                           	global	_dpowers
   198                           psect	strings,class=STRING,delta=2
   199                           global __pstrings
   200  0277                     __pstrings:
   201                           ;	global	stringdir,stringtab,__stringbase
   202  0277                     stringtab:
   203                           	global    __stringtab
   204  0277                     __stringtab:
   205                           ;	String table - string pointers are 1 byte each
   206  0277                     stringcode:stringdir:
      + 0277                     stringdir:	
   207  0277  3002               movlw high(stringdir)
   208  0278  008A               movwf pclath
   209  0279  0804               movf fsr,w
   210  027A  0A84               incf fsr
   211  027B  0782               	addwf pc
   212  027C                     __stringbase:
   213  027C  3400               	retlw	0
   214                           psect	strings
   215                           	global    __end_of__stringtab
   216  027D                     __end_of__stringtab:
   217                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.11\sources\doprnt.c"
   218                           	line	354
   219  027D                     _dpowers:
   220  027D  3401               	retlw	01h
   221  027E  3400               	retlw	0
   222                           
   223  027F  340A               	retlw	0Ah
   224  0280  3400               	retlw	0
   225                           
   226  0281  3464               	retlw	064h
   227  0282  3400               	retlw	0
   228                           
   229  0283  34E8               	retlw	0E8h
   230  0284  3403               	retlw	03h
   231                           
   232  0285  3410               	retlw	010h
   233  0286  3427               	retlw	027h
   234                           
   235                           	global __end_of_dpowers
   236  0287                     __end_of_dpowers:
   237                           	global	_dpowers
   238                           	global	_period
   239                           psect	nvBANK0,class=BANK0,space=1
   240                           global __pnvBANK0
   241  003D                     __pnvBANK0:
   242  003D                     _period:
   243  003D                            ds      1
   244                           
   245                           	global	_t_off
   246  003E                     _t_off:
   247  003E                            ds      1
   248                           
   249                           	global	_t_on
   250  003F                     _t_on:
   251  003F                            ds      1
   252                           
   253                           	global	_TMR1
   254  000E                     _TMR1	set	0xE
   255                           	global	_CCP1CON
   256  0017                     _CCP1CON	set	0x17
   257                           	global	_CCPR1H
   258  0016                     _CCPR1H	set	0x16
   259                           	global	_CCPR1L
   260  0015                     _CCPR1L	set	0x15
   261                           	global	_PIR1bits
   262  000C                     _PIR1bits	set	0xC
   263                           	global	_PORTCbits
   264  0007                     _PORTCbits	set	0x7
   265                           	global	_T1CON
   266  0010                     _T1CON	set	0x10
   267                           	global	_TMR1H
   268  000F                     _TMR1H	set	0xF
   269                           	global	_TMR1L
   270  000E                     _TMR1L	set	0xE
   271                           	global	_TXREG
   272  0019                     _TXREG	set	0x19
   273                           	global	_OPTION_REGbits
   274  0081                     _OPTION_REGbits	set	0x81
   275                           	global	_OSCCONbits
   276  008F                     _OSCCONbits	set	0x8F
   277                           	global	_TRISCbits
   278  0087                     _TRISCbits	set	0x87
   279                           	global	_TXSTAbits
   280  0098                     _TXSTAbits	set	0x98
   281                           	global	_ANSEL
   282  011E                     _ANSEL	set	0x11E
   283                           	global	_ANSELH
   284  011F                     _ANSELH	set	0x11F
   285                           psect	strings
   286                           	global __stringdata
   287  0287                     __stringdata:
   288                           	
   289  0287                     STR_1:	
   290  0287  3474               	retlw	116	;'t'
   291  0288  345F               	retlw	95	;'_'
   292  0289  346F               	retlw	111	;'o'
   293  028A  346E               	retlw	110	;'n'
   294  028B  343D               	retlw	61	;'='
   295  028C  3425               	retlw	37	;'%'
   296  028D  3464               	retlw	100	;'d'
   297  028E  342C               	retlw	44	;','
   298  028F  3420               	retlw	32	;' '
   299  0290  3474               	retlw	116	;'t'
   300  0291  345F               	retlw	95	;'_'
   301  0292  346F               	retlw	111	;'o'
   302  0293  3466               	retlw	102	;'f'
   303  0294  3466               	retlw	102	;'f'
   304  0295  343D               	retlw	61	;'='
   305  0296  3425               	retlw	37	;'%'
   306  0297  3464               	retlw	100	;'d'
   307  0298  3400               	retlw	0
   308                           psect	strings
   309                           	global __end_of__stringdata
   310  0299                     __end_of__stringdata:
   311                           ; #config settings
   312                           global __CFG_CPD$OFF
   313  0000                     __CFG_CPD$OFF equ 0x0
   314                           global __CFG_BOREN$ON
   315  0000                     __CFG_BOREN$ON equ 0x0
   316                           global __CFG_IESO$ON
   317  0000                     __CFG_IESO$ON equ 0x0
   318                           global __CFG_FOSC$INTRCIO
   319  0000                     __CFG_FOSC$INTRCIO equ 0x0
   320                           global __CFG_FCMEN$ON
   321  0000                     __CFG_FCMEN$ON equ 0x0
   322                           global __CFG_MCLRE$ON
   323  0000                     __CFG_MCLRE$ON equ 0x0
   324                           global __CFG_WDTE$OFF
   325  0000                     __CFG_WDTE$OFF equ 0x0
   326                           global __CFG_CP$OFF
   327  0000                     __CFG_CP$OFF equ 0x0
   328                           global __CFG_PWRTE$OFF
   329  0000                     __CFG_PWRTE$OFF equ 0x0
   330                           	file	"C:\Users\Rem\AppData\Local\Temp\s5v4."
   331                           	line	#
   332                           psect cinit,class=CODE,delta=2
   333                           global start_initialization
   334  02B2                     start_initialization:
   335                           
   336                           global __initialization
   337  02B2                     __initialization:
   338                           psect	bssCOMMON,class=COMMON,space=1
   339                           global __pbssCOMMON
   340  0079                     __pbssCOMMON:
   341  0079                     _status:
   342  0079                            ds      1
   343                           
   344                           ; Clear objects allocated to COMMON
   345                           psect cinit,class=CODE,delta=2,merge=1
   346  02B2  01F9               	clrf	((__pbssCOMMON)+0)&07Fh
   347                           psect cinit,class=CODE,delta=2,merge=1
   348                           global end_of_initialization,__end_of__initialization
   349                           
   350                           ;End of C runtime variable initialization code
   351                           
   352  02B3                     end_of_initialization:
   353  02B3                     __end_of__initialization:clrf status
      + 02B3  0183               	clrf	3
   354  02B4  118A  28EE         ljmp _main	;jump to C main() function
   355                           psect	cstackCOMMON,class=COMMON,space=1
   356                           global __pcstackCOMMON
   357  0070                     __pcstackCOMMON:
   358  0070                     ?_putch:	; 0 bytes @ 0x0
   359  0070                     ?_isr:	; 0 bytes @ 0x0
   360  0070                     ??_isr:	; 0 bytes @ 0x0
   361  0070                     ?_main:	; 2 bytes @ 0x0
   362  0070                     	ds	4
   363  0074                     ??_putch:	; 0 bytes @ 0x4
   364                           	global	?___lwdiv
   365  0074                     ?___lwdiv:	; 2 bytes @ 0x4
   366                           	global	?___awdiv
   367  0074                     ?___awdiv:	; 2 bytes @ 0x4
   368                           	global	putch@byte
   369  0074                     putch@byte:	; 1 bytes @ 0x4
   370                           	global	___lwdiv@divisor
   371  0074                     ___lwdiv@divisor:	; 2 bytes @ 0x4
   372                           	global	___awdiv@divisor
   373  0074                     ___awdiv@divisor:	; 2 bytes @ 0x4
   374  0074                     	ds	2
   375                           	global	___lwdiv@dividend
   376  0076                     ___lwdiv@dividend:	; 2 bytes @ 0x6
   377                           	global	___awdiv@dividend
   378  0076                     ___awdiv@dividend:	; 2 bytes @ 0x6
   379  0076                     	ds	2
   380  0078                     ??___lwdiv:	; 0 bytes @ 0x8
   381  0078                     ??___awdiv:	; 0 bytes @ 0x8
   382  0078                     	ds	1
   383                           psect	cstackBANK0,class=BANK0,space=1
   384                           global __pcstackBANK0
   385  0020                     __pcstackBANK0:
   386                           	global	___awdiv@counter
   387  0020                     ___awdiv@counter:	; 1 bytes @ 0x0
   388                           	global	___lwdiv@quotient
   389  0020                     ___lwdiv@quotient:	; 2 bytes @ 0x0
   390  0020                     	ds	1
   391                           	global	___awdiv@sign
   392  0021                     ___awdiv@sign:	; 1 bytes @ 0x1
   393  0021                     	ds	1
   394                           	global	___lwdiv@counter
   395  0022                     ___lwdiv@counter:	; 1 bytes @ 0x2
   396                           	global	___awdiv@quotient
   397  0022                     ___awdiv@quotient:	; 2 bytes @ 0x2
   398  0022                     	ds	1
   399                           	global	?___lwmod
   400  0023                     ?___lwmod:	; 2 bytes @ 0x3
   401                           	global	___lwmod@divisor
   402  0023                     ___lwmod@divisor:	; 2 bytes @ 0x3
   403  0023                     	ds	2
   404                           	global	___lwmod@dividend
   405  0025                     ___lwmod@dividend:	; 2 bytes @ 0x5
   406  0025                     	ds	2
   407  0027                     ??___lwmod:	; 0 bytes @ 0x7
   408  0027                     	ds	1
   409                           	global	___lwmod@counter
   410  0028                     ___lwmod@counter:	; 1 bytes @ 0x8
   411  0028                     	ds	1
   412                           	global	?_printf
   413  0029                     ?_printf:	; 2 bytes @ 0x9
   414  0029                     	ds	4
   415  002D                     ??_printf:	; 0 bytes @ 0xD
   416  002D                     	ds	3
   417                           	global	printf@ap
   418  0030                     printf@ap:	; 1 bytes @ 0x10
   419  0030                     	ds	1
   420                           	global	printf@flag
   421  0031                     printf@flag:	; 1 bytes @ 0x11
   422  0031                     	ds	1
   423                           	global	printf@f
   424  0032                     printf@f:	; 1 bytes @ 0x12
   425  0032                     	ds	1
   426                           	global	printf@prec
   427  0033                     printf@prec:	; 1 bytes @ 0x13
   428  0033                     	ds	1
   429                           	global	printf@_val
   430  0034                     printf@_val:	; 4 bytes @ 0x14
   431  0034                     	ds	4
   432                           	global	printf@c
   433  0038                     printf@c:	; 1 bytes @ 0x18
   434  0038                     	ds	1
   435  0039                     ??_main:	; 0 bytes @ 0x19
   436  0039                     	ds	4
   437                           ;!
   438                           ;!Data Sizes:
   439                           ;!    Strings     18
   440                           ;!    Constant    10
   441                           ;!    Data        0
   442                           ;!    BSS         1
   443                           ;!    Persistent  3
   444                           ;!    Stack       0
   445                           ;!
   446                           ;!Auto Spaces:
   447                           ;!    Space          Size  Autos    Used
   448                           ;!    COMMON           14      9      10
   449                           ;!    BANK0            80     29      32
   450                           ;!    BANK1            80      0       0
   451                           ;!    BANK2            80      0       0
   452                           
   453                           ;!
   454                           ;!Pointer List with Targets:
   455                           ;!
   456                           ;!    ?___lwdiv	unsigned int  size(1) Largest target is 0
   457                           ;!
   458                           ;!    ?___lwmod	unsigned int  size(1) Largest target is 0
   459                           ;!
   460                           ;!    ?___awdiv	int  size(1) Largest target is 0
   461                           ;!
   462                           ;!    printf@f	PTR const unsigned char  size(1) Largest target is 18
   463                           ;!		 -> STR_1(CODE[18]), 
   464                           ;!
   465                           ;!    ?_printf	int  size(1) Largest target is 0
   466                           ;!
   467                           ;!    printf@ap	PTR void [1] size(1) Largest target is 2
   468                           ;!		 -> ?_printf(BANK0[2]), 
   469                           ;!
   470                           ;!    S252$_cp	PTR const unsigned char  size(1) Largest target is 0
   471                           ;!
   472                           ;!    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   473                           ;!
   474                           
   475                           
   476                           ;!
   477                           ;!Critical Paths under _main in COMMON
   478                           ;!
   479                           ;!    _main->___awdiv
   480                           ;!    _printf->___lwdiv
   481                           ;!    ___lwmod->___lwdiv
   482                           ;!
   483                           ;!Critical Paths under _isr in COMMON
   484                           ;!
   485                           ;!    None.
   486                           ;!
   487                           ;!Critical Paths under _main in BANK0
   488                           ;!
   489                           ;!    _main->_printf
   490                           ;!    _printf->___lwmod
   491                           ;!    ___lwmod->___lwdiv
   492                           ;!
   493                           ;!Critical Paths under _isr in BANK0
   494                           ;!
   495                           ;!    None.
   496                           ;!
   497                           ;!Critical Paths under _main in BANK1
   498                           ;!
   499                           ;!    None.
   500                           ;!
   501                           ;!Critical Paths under _isr in BANK1
   502                           ;!
   503                           ;!    None.
   504                           ;!
   505                           ;!Critical Paths under _main in BANK2
   506                           ;!
   507                           ;!    None.
   508                           ;!
   509                           ;!Critical Paths under _isr in BANK2
   510                           ;!
   511                           ;!    None.
   512                           
   513 ;;
   514 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   515 ;;
   516                           
   517                           ;!
   518                           ;!Call Graph Tables:
   519                           ;!
   520                           ;! ---------------------------------------------------------------------------------
   521                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   522                           ;! ---------------------------------------------------------------------------------
   523                           ;! (0) _main                                                 6     6      0    1279
   524                           ;!                                             25 BANK0      4     4      0
   525                           ;!                            ___awdiv
   526                           ;!                             _printf
   527                           ;! ---------------------------------------------------------------------------------
   528                           ;! (1) _printf                                              16    12      4     979
   529                           ;!                                              9 BANK0     16    12      4
   530                           ;!                              _putch
   531                           ;!                            ___lwdiv
   532                           ;!                            ___lwmod
   533                           ;! ---------------------------------------------------------------------------------
   534                           ;! (2) _putch                                                1     1      0      22
   535                           ;!                                              4 COMMON     1     1      0
   536                           ;! ---------------------------------------------------------------------------------
   537                           ;! (2) ___lwmod                                              6     2      4     232
   538                           ;!                                              3 BANK0      6     2      4
   539                           ;!                            ___lwdiv (ARG)
   540                           ;! ---------------------------------------------------------------------------------
   541                           ;! (2) ___lwdiv                                              8     4      4     162
   542                           ;!                                              4 COMMON     5     1      4
   543                           ;!                                              0 BANK0      3     3      0
   544                           ;! ---------------------------------------------------------------------------------
   545                           ;! (1) ___awdiv                                              9     5      4     300
   546                           ;!                                              4 COMMON     5     1      4
   547                           ;!                                              0 BANK0      4     4      0
   548                           ;! ---------------------------------------------------------------------------------
   549                           ;! Estimated maximum stack depth 2
   550                           ;! ---------------------------------------------------------------------------------
   551                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   552                           ;! ---------------------------------------------------------------------------------
   553                           ;! (3) _isr                                                  4     4      0       0
   554                           ;!                                              0 COMMON     4     4      0
   555                           ;! ---------------------------------------------------------------------------------
   556                           ;! Estimated maximum stack depth 3
   557                           ;! ---------------------------------------------------------------------------------
   558                           ;!
   559                           ;! Call Graph Graphs:
   560                           ;!
   561                           ;! _main (ROOT)
   562                           ;!   ___awdiv
   563                           ;!   _printf
   564                           ;!     _putch
   565                           ;!     ___lwdiv
   566                           ;!     ___lwmod
   567                           ;!       ___lwdiv (ARG)
   568                           ;!
   569                           ;! _isr (ROOT)
   570                           ;!
   571                           
   572                           ;! Address spaces:
   573                           
   574                           ;!Name               Size   Autos  Total    Cost      Usage
   575                           ;!BITCOMMON            E      0       0       0        0.0%
   576                           ;!EEDATA             100      0       0       0        0.0%
   577                           ;!NULL                 0      0       0       0        0.0%
   578                           ;!CODE                 0      0       0       0        0.0%
   579                           ;!COMMON               E      9       A       1       71.4%
   580                           ;!BITSFR0              0      0       0       1        0.0%
   581                           ;!SFR0                 0      0       0       1        0.0%
   582                           ;!BITSFR1              0      0       0       2        0.0%
   583                           ;!SFR1                 0      0       0       2        0.0%
   584                           ;!STACK                0      0       2       2        0.0%
   585                           ;!BANK0               50     1D      20       3       40.0%
   586                           ;!BITBANK1            50      0       0       4        0.0%
   587                           ;!BITSFR3              0      0       0       4        0.0%
   588                           ;!SFR3                 0      0       0       4        0.0%
   589                           ;!BANK1               50      0       0       5        0.0%
   590                           ;!BITSFR2              0      0       0       5        0.0%
   591                           ;!SFR2                 0      0       0       5        0.0%
   592                           ;!BITBANK2            50      0       0       6        0.0%
   593                           ;!BANK2               50      0       0       7        0.0%
   594                           ;!ABS                  0      0      2A       8        0.0%
   595                           ;!BITBANK0            50      0       0       9        0.0%
   596                           ;!DATA                 0      0      2C      10        0.0%
   597                           
   598                           	global	_main
   599                           
   600 ;; *************** function _main *****************
   601 ;; Defined at:
   602 ;;		line 47 in file "main.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  percentage      2    0        int 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  2   53[COMMON] int 
   609 ;; Registers used:
   610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 17F/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   616 ;;      Params:         0       0       0       0
   617 ;;      Locals:         0       0       0       0
   618 ;;      Temps:          0       4       0       0
   619 ;;      Totals:         0       4       0       0
   620 ;;Total ram usage:        4 bytes
   621 ;; Hardware stack levels required when called:    3
   622 ;; This function calls:
   623 ;;		___awdiv
   624 ;;		_printf
   625 ;; This function is called by:
   626 ;;		Startup code after reset
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           psect	maintext,global,class=CODE,delta=2,split=1
   630                           global __pmaintext
   631  00EE                     __pmaintext:	;psect for function _main
   632                           psect	maintext
   633                           	file	"main.c"
   634                           	line	47
   635                           	global	__size_of_main
   636  0081                     	__size_of_main	equ	__end_of_main-_main
   637                           	
   638  00EE                     _main:	
   639                           	opt	stack 5
   640                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   641                           	line	50
   642                           	
   643  00EE                     l986:	
   644                           ;main.c: 48: int percentage;
   645                           ;main.c: 50: OSCCONbits.IRCF = 0b110;
   646  00EE  1683               	bsf	status, 5	;RP0=1, select bank1
   647  00EF  1303               	bcf	status, 6	;RP1=0, select bank1
   648  00F0  080F               	movf	(143)^080h,w	;volatile
   649  00F1  398F               	andlw	not (((1<<3)-1)<<4)
   650  00F2  3860               	iorlw	(06h & ((1<<3)-1))<<4
   651  00F3  008F               	movwf	(143)^080h	;volatile
   652                           	line	52
   653                           	
   654  00F4                     l988:	
   655                           ;main.c: 52: ANSEL = 0;
   656  00F4  1283               	bcf	status, 5	;RP0=0, select bank2
   657  00F5  1703               	bsf	status, 6	;RP1=1, select bank2
   658  00F6  019E               	clrf	(286)^0100h	;volatile
   659                           	line	53
   660                           	
   661  00F7                     l990:	
   662                           ;main.c: 53: ANSELH = 0;
   663  00F7  019F               	clrf	(287)^0100h	;volatile
   664                           	line	55
   665                           	
   666  00F8                     l992:	
   667                           ;main.c: 55: TRISCbits.TRISC5 = 0;
   668  00F8  1683               	bsf	status, 5	;RP0=1, select bank1
   669  00F9  1303               	bcf	status, 6	;RP1=0, select bank1
   670  00FA  1287               	bcf	(135)^080h,5	;volatile
   671                           	line	56
   672                           	
   673  00FB                     l994:	
   674                           ;main.c: 56: PORTCbits.RC5 = 1;
   675  00FB  1283               	bcf	status, 5	;RP0=0, select bank0
   676  00FC  1303               	bcf	status, 6	;RP1=0, select bank0
   677  00FD  1687               	bsf	(7),5	;volatile
   678                           	line	58
   679                           	
   680  00FE                     l996:	
   681                           ;main.c: 58: TRISCbits.TRISC0 = 0;
   682  00FE  1683               	bsf	status, 5	;RP0=1, select bank1
   683  00FF  1303               	bcf	status, 6	;RP1=0, select bank1
   684  0100  1007               	bcf	(135)^080h,0	;volatile
   685                           	line	60
   686                           	
   687  0101                     l998:	
   688                           ;main.c: 60: OPTION_REGbits.T0CS = 0;
   689  0101  1281               	bcf	(129)^080h,5	;volatile
   690                           	line	61
   691                           ;main.c: 61: OPTION_REGbits.PS = 0b100;
   692  0102  0801               	movf	(129)^080h,w	;volatile
   693  0103  39F8               	andlw	not (((1<<3)-1)<<0)
   694  0104  3804               	iorlw	(04h & ((1<<3)-1))<<0
   695  0105  0081               	movwf	(129)^080h	;volatile
   696                           	line	62
   697                           	
   698  0106                     l1000:	
   699                           ;main.c: 62: OPTION_REGbits.PSA = 0;
   700  0106  1181               	bcf	(129)^080h,3	;volatile
   701                           	line	64
   702                           	
   703  0107                     l1002:	
   704                           ;main.c: 64: period = 50;
   705  0107  3032               	movlw	(032h)
   706  0108  1283               	bcf	status, 5	;RP0=0, select bank0
   707  0109  1303               	bcf	status, 6	;RP1=0, select bank0
   708  010A  00B9               	movwf	(??_main+0)+0
   709  010B  0839               	movf	(??_main+0)+0,w
   710  010C  00BD               	movwf	(_period)
   711                           	line	66
   712                           	
   713  010D                     l1004:	
   714                           ;main.c: 66: TMR1 = period / 100;
   715  010D  3064               	movlw	low(064h)
   716  010E  00F4               	movwf	(?___awdiv)
   717  010F  3000               	movlw	high(064h)
   718  0110  00F5               	movwf	((?___awdiv))+1
   719  0111  083D               	movf	(_period),w
   720  0112  00B9               	movwf	(??_main+0)+0+0
   721  0113  01BA               	clrf	(??_main+0)+0+1
   722  0114  0839               	movf	0+(??_main+0)+0,w
   723  0115  00F6               	movwf	0+(?___awdiv)+02h
   724  0116  083A               	movf	1+(??_main+0)+0,w
   725  0117  00F7               	movwf	1+(?___awdiv)+02h
   726  0118  118A  216F  118A   	fcall	___awdiv
   727  011B  0875               	movf	(1+(?___awdiv)),w
   728  011C  1283               	bcf	status, 5	;RP0=0, select bank0
   729  011D  1303               	bcf	status, 6	;RP1=0, select bank0
   730  011E  018F               	clrf	(14+1)	;volatile
   731  011F  078F               	addwf	(14+1)	;volatile
   732  0120  0874               	movf	(0+(?___awdiv)),w
   733  0121  018E               	clrf	(14)	;volatile
   734  0122  078E               	addwf	(14)	;volatile
   735                           
   736                           	line	68
   737                           	
   738  0123                     l1006:	
   739                           ;main.c: 68: T1CON = 0xC9;
   740  0123  30C9               	movlw	(0C9h)
   741  0124  0090               	movwf	(16)	;volatile
   742                           	line	70
   743                           	
   744  0125                     l1008:	
   745                           ;main.c: 70: CCP1CON = 0x09;
   746  0125  3009               	movlw	(09h)
   747  0126  0097               	movwf	(23)	;volatile
   748                           	line	72
   749                           	
   750  0127                     l1010:	
   751                           ;main.c: 72: CCPR1L = TMR1 + 2;
   752  0127  080E               	movf	(14),w	;volatile
   753  0128  3E02               	addlw	02h
   754  0129  0095               	movwf	(21)	;volatile
   755                           	line	74
   756                           	
   757  012A                     l1012:	
   758                           ;main.c: 74: PIR1bits.CCP1IF = 0;
   759  012A  110C               	bcf	(12),2	;volatile
   760  012B  292C               	goto	l1014
   761                           	line	76
   762                           ;main.c: 76: while (1) {
   763                           	
   764  012C                     l54:	
   765                           	line	77
   766                           	
   767  012C                     l1014:	
   768                           ;main.c: 77: t_on = 100;
   769  012C  3064               	movlw	(064h)
   770  012D  00B9               	movwf	(??_main+0)+0
   771  012E  0839               	movf	(??_main+0)+0,w
   772  012F  00BF               	movwf	(_t_on)
   773                           	line	78
   774                           	
   775  0130                     l1016:	
   776                           ;main.c: 78: t_off = 50;
   777  0130  3032               	movlw	(032h)
   778  0131  00B9               	movwf	(??_main+0)+0
   779  0132  0839               	movf	(??_main+0)+0,w
   780  0133  00BE               	movwf	(_t_off)
   781                           	line	82
   782                           ;main.c: 82: while (!PIR1bits.CCP1IF);
   783  0134  2935               	goto	l55
   784                           	
   785  0135                     l56:	
   786                           	
   787  0135                     l55:	
   788  0135  1D0C               	btfss	(12),2	;volatile
   789  0136  2938               	goto	u691
   790  0137  2939               	goto	u690
   791  0138                     u691:
   792  0138  2935               	goto	l55
   793  0139                     u690:
   794                           	
   795  0139                     l57:	
   796                           	line	83
   797                           ;main.c: 83: PIR1bits.CCP1IF = 0;
   798  0139  110C               	bcf	(12),2	;volatile
   799                           	line	86
   800                           ;main.c: 86: PORTCbits.RC0 = 1;
   801  013A  1407               	bsf	(7),0	;volatile
   802                           	line	89
   803                           	
   804  013B                     l1018:	
   805                           ;main.c: 89: TMR1L = 0; TMR1H = 0;
   806  013B  018E               	clrf	(14)	;volatile
   807  013C  018F               	clrf	(15)	;volatile
   808                           	line	90
   809                           	
   810  013D                     l1020:	
   811                           ;main.c: 90: CCP1CON = 0x08;
   812  013D  3008               	movlw	(08h)
   813  013E  0097               	movwf	(23)	;volatile
   814                           	line	91
   815                           	
   816  013F                     l1022:	
   817                           ;main.c: 91: CCPR1H = -t_on;
   818  013F  033F               	decf	(_t_on),w
   819  0140  3AFF               	xorlw	0ffh
   820  0141  0096               	movwf	(22)	;volatile
   821                           	line	93
   822                           	
   823  0142                     l1024:	
   824                           ;main.c: 93: t_on = 100;
   825  0142  3064               	movlw	(064h)
   826  0143  00B9               	movwf	(??_main+0)+0
   827  0144  0839               	movf	(??_main+0)+0,w
   828  0145  00BF               	movwf	(_t_on)
   829                           	line	94
   830                           	
   831  0146                     l1026:	
   832                           ;main.c: 94: t_off = 50;
   833  0146  3032               	movlw	(032h)
   834  0147  00B9               	movwf	(??_main+0)+0
   835  0148  0839               	movf	(??_main+0)+0,w
   836  0149  00BE               	movwf	(_t_off)
   837                           	line	96
   838                           	
   839  014A                     l1028:	
   840                           ;main.c: 96: printf("t_on=%d, t_off=%d", t_on, t_off);
   841  014A  083F               	movf	(_t_on),w
   842  014B  00B9               	movwf	(??_main+0)+0+0
   843  014C  01BA               	clrf	(??_main+0)+0+1
   844  014D  0839               	movf	0+(??_main+0)+0,w
   845  014E  00A9               	movwf	(?_printf)
   846  014F  083A               	movf	1+(??_main+0)+0,w
   847  0150  00AA               	movwf	(?_printf+1)
   848  0151  083E               	movf	(_t_off),w
   849  0152  00BB               	movwf	(??_main+2)+0+0
   850  0153  01BC               	clrf	(??_main+2)+0+1
   851  0154  083B               	movf	0+(??_main+2)+0,w
   852  0155  00AB               	movwf	0+(?_printf)+02h
   853  0156  083C               	movf	1+(??_main+2)+0,w
   854  0157  00AC               	movwf	1+(?_printf)+02h
   855  0158  300B               	movlw	((STR_1-__stringbase))&0ffh
   856  0159  118A  2013  118A   	fcall	_printf
   857                           	line	98
   858                           ;main.c: 98: while (!(PIR1bits.CCP1IF));
   859  015C  295D               	goto	l58
   860                           	
   861  015D                     l59:	
   862                           	
   863  015D                     l58:	
   864  015D  1283               	bcf	status, 5	;RP0=0, select bank0
   865  015E  1303               	bcf	status, 6	;RP1=0, select bank0
   866  015F  1D0C               	btfss	(12),2	;volatile
   867  0160  2962               	goto	u701
   868  0161  2963               	goto	u700
   869  0162                     u701:
   870  0162  295D               	goto	l58
   871  0163                     u700:
   872  0163  2964               	goto	l1030
   873                           	
   874  0164                     l60:	
   875                           	line	100
   876                           	
   877  0164                     l1030:	
   878                           ;main.c: 100: TMR1L = 0; TMR1H = 0;
   879  0164  018E               	clrf	(14)	;volatile
   880  0165  018F               	clrf	(15)	;volatile
   881                           	line	101
   882                           	
   883  0166                     l1032:	
   884                           ;main.c: 101: CCP1CON = 0x09;
   885  0166  3009               	movlw	(09h)
   886  0167  0097               	movwf	(23)	;volatile
   887                           	line	102
   888                           	
   889  0168                     l1034:	
   890                           ;main.c: 102: CCPR1L = -t_off;
   891  0168  033E               	decf	(_t_off),w
   892  0169  3AFF               	xorlw	0ffh
   893  016A  0095               	movwf	(21)	;volatile
   894  016B  292C               	goto	l1014
   895                           	line	103
   896                           	
   897  016C                     l61:	
   898                           	line	76
   899  016C  292C               	goto	l1014
   900                           	
   901  016D                     l62:	
   902                           	line	106
   903                           ;main.c: 103: }
   904                           ;main.c: 105: return 0;
   905                           ;	Return value of _main is never used
   906                           	
   907  016D                     l63:	
   908                           	global	start
   909  016D  118A  2811         	ljmp	start
   910                           	opt stack 0
   911                           GLOBAL	__end_of_main
   912  016F                     	__end_of_main:
   913                           	signat	_main,90
   914                           	global	_printf
   915                           
   916 ;; *************** function _printf *****************
   917 ;; Defined at:
   918 ;;		line 465 in file "C:\Program Files (x86)\Microchip\xc8\v1.11\sources\doprnt.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  f               1    wreg     PTR const unsigned char 
   921 ;;		 -> STR_1(18), 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  f               1   18[BANK0 ] PTR const unsigned char 
   924 ;;		 -> STR_1(18), 
   925 ;;  _val            4   20[BANK0 ] struct .
   926 ;;  c               1   24[BANK0 ] char 
   927 ;;  prec            1   19[BANK0 ] char 
   928 ;;  flag            1   17[BANK0 ] unsigned char 
   929 ;;  ap              1   16[BANK0 ] PTR void [1]
   930 ;;		 -> ?_printf(2), 
   931 ;; Return value:  Size  Location     Type
   932 ;;                  2    9[BANK0 ] int 
   933 ;; Registers used:
   934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   940 ;;      Params:         0       4       0       0
   941 ;;      Locals:         0       9       0       0
   942 ;;      Temps:          0       3       0       0
   943 ;;      Totals:         0      16       0       0
   944 ;;Total ram usage:       16 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    2
   947 ;; This function calls:
   948 ;;		_putch
   949 ;;		___lwdiv
   950 ;;		___lwmod
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           psect	text237,local,class=CODE,delta=2,merge=1
   956                           global __ptext237
   957  0013                     __ptext237:	;psect for function _printf
   958                           psect	text237
   959                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.11\sources\doprnt.c"
   960                           	line	465
   961                           	global	__size_of_printf
   962  00DB                     	__size_of_printf	equ	__end_of_printf-_printf
   963                           	
   964  0013                     _printf:	
   965                           	opt	stack 5
   966                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   967                           ;printf@f stored from wreg
   968                           	line	542
   969  0013  1283               	bcf	status, 5	;RP0=0, select bank0
   970  0014  1303               	bcf	status, 6	;RP1=0, select bank0
   971  0015  00B2               	movwf	(printf@f)
   972                           	
   973  0016                     l1036:	
   974                           ;doprnt.c: 466: va_list ap;
   975                           ;doprnt.c: 499: signed char c;
   976                           ;doprnt.c: 506: signed char prec;
   977                           ;doprnt.c: 508: unsigned char flag;
   978                           ;doprnt.c: 527: union {
   979                           ;doprnt.c: 528: unsigned int _val;
   980                           ;doprnt.c: 529: struct {
   981                           ;doprnt.c: 530: const char * _cp;
   982                           ;doprnt.c: 531: unsigned _len;
   983                           ;doprnt.c: 532: } _str;
   984                           ;doprnt.c: 533: } _val;
   985                           ;doprnt.c: 542: *ap = __va_start();
   986  0016  3029               	movlw	(?_printf)&0ffh
   987  0017  00AD               	movwf	(??_printf+0)+0
   988  0018  082D               	movf	(??_printf+0)+0,w
   989  0019  00B0               	movwf	(printf@ap)
   990                           	line	545
   991                           ;doprnt.c: 545: while(c = *f++) {
   992  001A  28D9               	goto	l1080
   993                           	
   994  001B                     l75:	
   995                           	line	547
   996                           	
   997  001B                     l1038:	
   998                           ;doprnt.c: 547: if(c != '%')
   999  001B  0838               	movf	(printf@c),w
  1000  001C  3A25               	xorlw	025h
  1001  001D  1903               	skipnz
  1002  001E  2820               	goto	u711
  1003  001F  2821               	goto	u710
  1004  0020                     u711:
  1005  0020  2826               	goto	l76
  1006  0021                     u710:
  1007                           	line	550
  1008                           	
  1009  0021                     l1040:	
  1010                           ;doprnt.c: 549: {
  1011                           ;doprnt.c: 550: (putch(c) );
  1012  0021  0838               	movf	(printf@c),w
  1013  0022  118A  2299  118A   	fcall	_putch
  1014                           	line	551
  1015                           ;doprnt.c: 551: continue;
  1016  0025  28D9               	goto	l1080
  1017                           	line	552
  1018                           	
  1019  0026                     l76:	
  1020                           	line	557
  1021                           ;doprnt.c: 552: }
  1022                           ;doprnt.c: 557: flag = 0;
  1023  0026  01B1               	clrf	(printf@flag)
  1024                           	line	644
  1025                           ;doprnt.c: 644: switch(c = *f++) {
  1026  0027  282D               	goto	l1044
  1027                           	line	646
  1028                           ;doprnt.c: 646: case 0:
  1029                           	
  1030  0028                     l78:	
  1031                           	line	647
  1032                           ;doprnt.c: 647: goto alldone;
  1033  0028  28ED               	goto	l93
  1034                           	line	706
  1035                           ;doprnt.c: 706: case 'd':
  1036                           	
  1037  0029                     l80:	
  1038  0029  2840               	goto	l1046
  1039                           	line	707
  1040                           	
  1041  002A                     l81:	
  1042                           	line	708
  1043                           ;doprnt.c: 707: case 'i':
  1044                           ;doprnt.c: 708: break;
  1045  002A  2840               	goto	l1046
  1046                           	line	811
  1047                           ;doprnt.c: 811: default:
  1048                           	
  1049  002B                     l83:	
  1050                           	line	822
  1051                           ;doprnt.c: 822: continue;
  1052  002B  28D9               	goto	l1080
  1053                           	line	831
  1054                           	
  1055  002C                     l1042:	
  1056                           ;doprnt.c: 831: }
  1057  002C  2840               	goto	l1046
  1058                           	line	644
  1059                           	
  1060  002D                     l77:	
  1061                           	
  1062  002D                     l1044:	
  1063  002D  3001               	movlw	01h
  1064  002E  07B2               	addwf	(printf@f),f
  1065  002F  30FF               	movlw	-01h
  1066  0030  0732               	addwf	(printf@f),w
  1067  0031  0084               	movwf	fsr0
  1068  0032  118A  2277  118A   	fcall	stringdir
  1069  0035  00B8               	movwf	(printf@c)
  1070                           	; Switch size 1, requested type "space"
  1071                           ; Number of cases is 3, Range of values is 0 to 105
  1072                           ; switch strategies available:
  1073                           ; Name         Instructions Cycles
  1074                           ; simple_byte           10     6 (average)
  1075                           ; direct_byte          219     7 (fixed)
  1076                           ; jumptable            260     6 (fixed)
  1077                           ; rangetable           110     6 (fixed)
  1078                           ; spacedrange          218     9 (fixed)
  1079                           ; locatedrange         106     3 (fixed)
  1080                           ;	Chosen strategy is simple_byte
  1081                           
  1082                           	opt asmopt_off
  1083  0036  3A00               	xorlw	0^0	; case 0
  1084  0037  1903               	skipnz
  1085  0038  28ED               	goto	l93
  1086  0039  3A64               	xorlw	100^0	; case 100
  1087  003A  1903               	skipnz
  1088  003B  2840               	goto	l1046
  1089  003C  3A0D               	xorlw	105^100	; case 105
  1090  003D  1903               	skipnz
  1091  003E  2840               	goto	l1046
  1092  003F  28D9               	goto	l1080
  1093                           	opt asmopt_on
  1094                           
  1095                           	line	831
  1096                           	
  1097  0040                     l82:	
  1098                           	line	1266
  1099                           	
  1100  0040                     l1046:	
  1101                           ;doprnt.c: 1260: {
  1102                           ;doprnt.c: 1266: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1103  0040  0830               	movf	(printf@ap),w
  1104  0041  0084               	movwf	fsr0
  1105  0042  1383               	bcf	status, 7	;select IRP bank0
  1106  0043  0800               	movf	indf,w
  1107  0044  00B4               	movwf	(printf@_val)
  1108  0045  0A84               	incf	fsr0,f
  1109  0046  0800               	movf	indf,w
  1110  0047  00B5               	movwf	(printf@_val+1)
  1111                           	
  1112  0048                     l1048:	
  1113  0048  3002               	movlw	(02h)
  1114  0049  00AD               	movwf	(??_printf+0)+0
  1115  004A  082D               	movf	(??_printf+0)+0,w
  1116  004B  07B0               	addwf	(printf@ap),f
  1117                           	line	1268
  1118                           	
  1119  004C                     l1050:	
  1120                           ;doprnt.c: 1268: if((int)_val._val < 0) {
  1121  004C  1FB5               	btfss	(printf@_val+1),7
  1122  004D  284F               	goto	u721
  1123  004E  2850               	goto	u720
  1124  004F                     u721:
  1125  004F  285A               	goto	l1056
  1126  0050                     u720:
  1127                           	line	1269
  1128                           	
  1129  0050                     l1052:	
  1130                           ;doprnt.c: 1269: flag |= 0x03;
  1131  0050  3003               	movlw	(03h)
  1132  0051  00AD               	movwf	(??_printf+0)+0
  1133  0052  082D               	movf	(??_printf+0)+0,w
  1134  0053  04B1               	iorwf	(printf@flag),f
  1135                           	line	1270
  1136                           	
  1137  0054                     l1054:	
  1138                           ;doprnt.c: 1270: _val._val = -_val._val;
  1139  0054  09B4               	comf	(printf@_val),f
  1140  0055  09B5               	comf	(printf@_val+1),f
  1141  0056  0AB4               	incf	(printf@_val),f
  1142  0057  1903               	skipnz
  1143  0058  0AB5               	incf	(printf@_val+1),f
  1144  0059  285A               	goto	l1056
  1145                           	line	1271
  1146                           	
  1147  005A                     l84:	
  1148                           	line	1312
  1149                           	
  1150  005A                     l1056:	
  1151                           ;doprnt.c: 1271: }
  1152                           ;doprnt.c: 1273: }
  1153                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1154  005A  01B8               	clrf	(printf@c)
  1155  005B  0AB8               	incf	(printf@c),f
  1156  005C  0838               	movf	(printf@c),w
  1157  005D  3A05               	xorlw	05h
  1158  005E  1D03               	skipz
  1159  005F  2861               	goto	u731
  1160  0060  2862               	goto	u730
  1161  0061                     u731:
  1162  0061  2864               	goto	l1060
  1163  0062                     u730:
  1164  0062  2888               	goto	l1068
  1165                           	
  1166  0063                     l1058:	
  1167  0063  2888               	goto	l1068
  1168                           	line	1313
  1169                           	
  1170  0064                     l85:	
  1171                           	
  1172  0064                     l1060:	
  1173                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
  1174  0064  0838               	movf	(printf@c),w
  1175  0065  00AD               	movwf	(??_printf+0)+0
  1176  0066  072D               	addwf	(??_printf+0)+0,w
  1177  0067  3E01               	addlw	low((_dpowers-__stringbase))
  1178  0068  0084               	movwf	fsr0
  1179  0069  118A  2277  118A   	fcall	stringdir
  1180  006C  00AE               	movwf	(??_printf+1)+0
  1181  006D  118A  2277  118A   	fcall	stringdir
  1182  0070  00AF               	movwf	(??_printf+1)+0+1
  1183  0071  082F               	movf	1+(??_printf+1)+0,w
  1184  0072  0235               	subwf	(printf@_val+1),w
  1185  0073  1D03               	skipz
  1186  0074  2877               	goto	u745
  1187  0075  082E               	movf	0+(??_printf+1)+0,w
  1188  0076  0234               	subwf	(printf@_val),w
  1189  0077                     u745:
  1190  0077  1803               	skipnc
  1191  0078  287A               	goto	u741
  1192  0079  287B               	goto	u740
  1193  007A                     u741:
  1194  007A  287D               	goto	l1064
  1195  007B                     u740:
  1196  007B  2888               	goto	l1068
  1197                           	line	1314
  1198                           	
  1199  007C                     l1062:	
  1200                           ;doprnt.c: 1314: break;
  1201  007C  2888               	goto	l1068
  1202                           	
  1203  007D                     l87:	
  1204                           	line	1312
  1205                           	
  1206  007D                     l1064:	
  1207  007D  3001               	movlw	(01h)
  1208  007E  00AD               	movwf	(??_printf+0)+0
  1209  007F  082D               	movf	(??_printf+0)+0,w
  1210  0080  07B8               	addwf	(printf@c),f
  1211                           	
  1212  0081                     l1066:	
  1213  0081  0838               	movf	(printf@c),w
  1214  0082  3A05               	xorlw	05h
  1215  0083  1D03               	skipz
  1216  0084  2886               	goto	u751
  1217  0085  2887               	goto	u750
  1218  0086                     u751:
  1219  0086  2864               	goto	l1060
  1220  0087                     u750:
  1221  0087  2888               	goto	l1068
  1222                           	
  1223  0088                     l86:	
  1224                           	line	1445
  1225                           	
  1226  0088                     l1068:	
  1227                           ;doprnt.c: 1429: {
  1228                           ;doprnt.c: 1445: if(flag & 0x03)
  1229  0088  0831               	movf	(printf@flag),w
  1230  0089  3903               	andlw	03h
  1231  008A  1903               	btfsc	status,2
  1232  008B  288D               	goto	u761
  1233  008C  288E               	goto	u760
  1234  008D                     u761:
  1235  008D  2893               	goto	l1072
  1236  008E                     u760:
  1237                           	line	1446
  1238                           	
  1239  008E                     l1070:	
  1240                           ;doprnt.c: 1446: (putch('-') );
  1241  008E  302D               	movlw	(02Dh)
  1242  008F  118A  2299  118A   	fcall	_putch
  1243  0092  2893               	goto	l1072
  1244                           	
  1245  0093                     l88:	
  1246                           	line	1479
  1247                           	
  1248  0093                     l1072:	
  1249                           ;doprnt.c: 1476: }
  1250                           ;doprnt.c: 1479: prec = c;
  1251  0093  1283               	bcf	status, 5	;RP0=0, select bank0
  1252  0094  1303               	bcf	status, 6	;RP1=0, select bank0
  1253  0095  0838               	movf	(printf@c),w
  1254  0096  00AD               	movwf	(??_printf+0)+0
  1255  0097  082D               	movf	(??_printf+0)+0,w
  1256  0098  00B3               	movwf	(printf@prec)
  1257                           	line	1481
  1258                           ;doprnt.c: 1481: while(prec--) {
  1259  0099  28CB               	goto	l1078
  1260                           	
  1261  009A                     l90:	
  1262                           	line	1496
  1263                           	
  1264  009A                     l1074:	
  1265                           ;doprnt.c: 1485: {
  1266                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
  1267  009A  300A               	movlw	low(0Ah)
  1268  009B  00A3               	movwf	(?___lwmod)
  1269  009C  3000               	movlw	high(0Ah)
  1270  009D  00A4               	movwf	((?___lwmod))+1
  1271  009E  0833               	movf	(printf@prec),w
  1272  009F  00AD               	movwf	(??_printf+0)+0
  1273  00A0  072D               	addwf	(??_printf+0)+0,w
  1274  00A1  3E01               	addlw	low((_dpowers-__stringbase))
  1275  00A2  0084               	movwf	fsr0
  1276  00A3  118A  2277  118A   	fcall	stringdir
  1277  00A6  00F4               	movwf	(?___lwdiv)
  1278  00A7  118A  2277  118A   	fcall	stringdir
  1279  00AA  00F5               	movwf	(?___lwdiv+1)
  1280  00AB  0835               	movf	(printf@_val+1),w
  1281  00AC  01F7               	clrf	1+(?___lwdiv)+02h
  1282  00AD  07F7               	addwf	1+(?___lwdiv)+02h
  1283  00AE  0834               	movf	(printf@_val),w
  1284  00AF  01F6               	clrf	0+(?___lwdiv)+02h
  1285  00B0  07F6               	addwf	0+(?___lwdiv)+02h
  1286                           
  1287  00B1  118A  21E3  118A   	fcall	___lwdiv
  1288  00B4  0875               	movf	(1+(?___lwdiv)),w
  1289  00B5  1283               	bcf	status, 5	;RP0=0, select bank0
  1290  00B6  1303               	bcf	status, 6	;RP1=0, select bank0
  1291  00B7  01A6               	clrf	1+(?___lwmod)+02h
  1292  00B8  07A6               	addwf	1+(?___lwmod)+02h
  1293  00B9  0874               	movf	(0+(?___lwdiv)),w
  1294  00BA  01A5               	clrf	0+(?___lwmod)+02h
  1295  00BB  07A5               	addwf	0+(?___lwmod)+02h
  1296                           
  1297  00BC  118A  2232  118A   	fcall	___lwmod
  1298  00BF  1283               	bcf	status, 5	;RP0=0, select bank0
  1299  00C0  1303               	bcf	status, 6	;RP1=0, select bank0
  1300  00C1  0823               	movf	(0+(?___lwmod)),w
  1301  00C2  3E30               	addlw	030h
  1302  00C3  00AE               	movwf	(??_printf+1)+0
  1303  00C4  082E               	movf	(??_printf+1)+0,w
  1304  00C5  00B8               	movwf	(printf@c)
  1305                           	line	1531
  1306                           	
  1307  00C6                     l1076:	
  1308                           ;doprnt.c: 1530: }
  1309                           ;doprnt.c: 1531: (putch(c) );
  1310  00C6  0838               	movf	(printf@c),w
  1311  00C7  118A  2299  118A   	fcall	_putch
  1312  00CA  28CB               	goto	l1078
  1313                           	line	1532
  1314                           	
  1315  00CB                     l89:	
  1316                           	line	1481
  1317                           	
  1318  00CB                     l1078:	
  1319  00CB  30FF               	movlw	(-1)
  1320  00CC  1283               	bcf	status, 5	;RP0=0, select bank0
  1321  00CD  1303               	bcf	status, 6	;RP1=0, select bank0
  1322  00CE  00AD               	movwf	(??_printf+0)+0
  1323  00CF  082D               	movf	(??_printf+0)+0,w
  1324  00D0  07B3               	addwf	(printf@prec),f
  1325  00D1  0833               	movf	((printf@prec)),w
  1326  00D2  3AFF               	xorlw	-1
  1327  00D3  1D03               	skipz
  1328  00D4  28D6               	goto	u771
  1329  00D5  28D7               	goto	u770
  1330  00D6                     u771:
  1331  00D6  289A               	goto	l1074
  1332  00D7                     u770:
  1333  00D7  28D9               	goto	l1080
  1334                           	
  1335  00D8                     l91:	
  1336  00D8  28D9               	goto	l1080
  1337                           	line	1540
  1338                           	
  1339  00D9                     l74:	
  1340                           	line	545
  1341                           	
  1342  00D9                     l1080:	
  1343  00D9  3001               	movlw	01h
  1344  00DA  1283               	bcf	status, 5	;RP0=0, select bank0
  1345  00DB  1303               	bcf	status, 6	;RP1=0, select bank0
  1346  00DC  07B2               	addwf	(printf@f),f
  1347  00DD  30FF               	movlw	-01h
  1348  00DE  0732               	addwf	(printf@f),w
  1349  00DF  0084               	movwf	fsr0
  1350  00E0  118A  2277  118A   	fcall	stringdir
  1351  00E3  00AD               	movwf	(??_printf+0)+0
  1352  00E4  082D               	movf	(??_printf+0)+0,w
  1353  00E5  00B8               	movwf	(printf@c)
  1354  00E6  08B8               	movf	((printf@c)),f
  1355  00E7  1D03               	skipz
  1356  00E8  28EA               	goto	u781
  1357  00E9  28EB               	goto	u780
  1358  00EA                     u781:
  1359  00EA  281B               	goto	l1038
  1360  00EB                     u780:
  1361  00EB  28ED               	goto	l93
  1362                           	
  1363  00EC                     l92:	
  1364  00EC  28ED               	goto	l93
  1365                           	line	1542
  1366                           ;doprnt.c: 1532: }
  1367                           ;doprnt.c: 1540: }
  1368                           ;doprnt.c: 1542: alldone:
  1369                           	
  1370  00ED                     l79:	
  1371                           	line	1548
  1372                           ;doprnt.c: 1547: return 0;
  1373                           ;	Return value of _printf is never used
  1374                           	
  1375  00ED                     l93:	
  1376  00ED  0008               	return
  1377                           	opt stack 0
  1378                           GLOBAL	__end_of_printf
  1379  00EE                     	__end_of_printf:
  1380                           	signat	_printf,602
  1381                           	global	_putch
  1382                           
  1383 ;; *************** function _putch *****************
  1384 ;; Defined at:
  1385 ;;		line 34 in file "main.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  byte            1    wreg     unsigned char 
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  byte            1    4[COMMON] unsigned char 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;		None               void
  1392 ;; Registers used:
  1393 ;;		wreg
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1399 ;;      Params:         0       0       0       0
  1400 ;;      Locals:         1       0       0       0
  1401 ;;      Temps:          0       0       0       0
  1402 ;;      Totals:         1       0       0       0
  1403 ;;Total ram usage:        1 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    1
  1406 ;; This function calls:
  1407 ;;		Nothing
  1408 ;; This function is called by:
  1409 ;;		_printf
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           psect	text238,local,class=CODE,delta=2,merge=1
  1413                           global __ptext238
  1414  0299                     __ptext238:	;psect for function _putch
  1415                           psect	text238
  1416                           	file	"main.c"
  1417                           	line	34
  1418                           	global	__size_of_putch
  1419  000E                     	__size_of_putch	equ	__end_of_putch-_putch
  1420                           	
  1421  0299                     _putch:	
  1422                           	opt	stack 5
  1423                           ; Regs used in _putch: [wreg]
  1424                           ;putch@byte stored from wreg
  1425                           	line	36
  1426  0299  00F4               	movwf	(putch@byte)
  1427                           	
  1428  029A                     l792:	
  1429                           ;main.c: 36: TXREG = byte;
  1430  029A  0874               	movf	(putch@byte),w
  1431  029B  1283               	bcf	status, 5	;RP0=0, select bank0
  1432  029C  1303               	bcf	status, 6	;RP1=0, select bank0
  1433  029D  0099               	movwf	(25)	;volatile
  1434                           	line	37
  1435                           ;main.c: 37: while(!TXSTAbits.TRMT) ;
  1436  029E  2A9F               	goto	l45
  1437                           	
  1438  029F                     l46:	
  1439                           	
  1440  029F                     l45:	
  1441  029F  1683               	bsf	status, 5	;RP0=1, select bank1
  1442  02A0  1303               	bcf	status, 6	;RP1=0, select bank1
  1443  02A1  1C98               	btfss	(152)^080h,1	;volatile
  1444  02A2  2AA4               	goto	u351
  1445  02A3  2AA5               	goto	u350
  1446  02A4                     u351:
  1447  02A4  2A9F               	goto	l45
  1448  02A5                     u350:
  1449  02A5  2AA6               	goto	l48
  1450                           	
  1451  02A6                     l47:	
  1452                           	line	38
  1453                           	
  1454  02A6                     l48:	
  1455  02A6  0008               	return
  1456                           	opt stack 0
  1457                           GLOBAL	__end_of_putch
  1458  02A7                     	__end_of_putch:
  1459                           	signat	_putch,4216
  1460                           	global	___lwmod
  1461                           
  1462 ;; *************** function ___lwmod *****************
  1463 ;; Defined at:
  1464 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.11\sources\lwmod.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  divisor         2    3[BANK0 ] unsigned int 
  1467 ;;  dividend        2    5[BANK0 ] unsigned int 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  counter         1    8[BANK0 ] unsigned char 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  2    3[BANK0 ] unsigned int 
  1472 ;; Registers used:
  1473 ;;		wreg, status,2, status,0
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1479 ;;      Params:         0       4       0       0
  1480 ;;      Locals:         0       1       0       0
  1481 ;;      Temps:          0       1       0       0
  1482 ;;      Totals:         0       6       0       0
  1483 ;;Total ram usage:        6 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; Hardware stack levels required when called:    1
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_printf
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           psect	text239,local,class=CODE,delta=2,merge=1
  1493                           global __ptext239
  1494  0232                     __ptext239:	;psect for function ___lwmod
  1495                           psect	text239
  1496                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.11\sources\lwmod.c"
  1497                           	line	5
  1498                           	global	__size_of___lwmod
  1499  0045                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  1500                           	
  1501  0232                     ___lwmod:	
  1502                           	opt	stack 5
  1503                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1504                           	line	8
  1505                           	
  1506  0232                     l1082:	
  1507  0232  1283               	bcf	status, 5	;RP0=0, select bank0
  1508  0233  1303               	bcf	status, 6	;RP1=0, select bank0
  1509  0234  0824               	movf	(___lwmod@divisor+1),w
  1510  0235  0423               	iorwf	(___lwmod@divisor),w
  1511  0236  1903               	skipnz
  1512  0237  2A39               	goto	u791
  1513  0238  2A3A               	goto	u790
  1514  0239                     u791:
  1515  0239  2A6F               	goto	l1100
  1516  023A                     u790:
  1517                           	line	9
  1518                           	
  1519  023A                     l1084:	
  1520  023A  01A8               	clrf	(___lwmod@counter)
  1521  023B  0AA8               	incf	(___lwmod@counter),f
  1522                           	line	10
  1523  023C  2A49               	goto	l1090
  1524                           	
  1525  023D                     l200:	
  1526                           	line	11
  1527                           	
  1528  023D                     l1086:	
  1529  023D  3001               	movlw	01h
  1530                           	
  1531  023E                     u805:
  1532  023E  1003               	clrc
  1533  023F  0DA3               	rlf	(___lwmod@divisor),f
  1534  0240  0DA4               	rlf	(___lwmod@divisor+1),f
  1535  0241  3EFF               	addlw	-1
  1536  0242  1D03               	skipz
  1537  0243  2A3E               	goto	u805
  1538                           	line	12
  1539                           	
  1540  0244                     l1088:	
  1541  0244  3001               	movlw	(01h)
  1542  0245  00A7               	movwf	(??___lwmod+0)+0
  1543  0246  0827               	movf	(??___lwmod+0)+0,w
  1544  0247  07A8               	addwf	(___lwmod@counter),f
  1545  0248  2A49               	goto	l1090
  1546                           	line	13
  1547                           	
  1548  0249                     l199:	
  1549                           	line	10
  1550                           	
  1551  0249                     l1090:	
  1552  0249  1FA4               	btfss	(___lwmod@divisor+1),(15)&7
  1553  024A  2A4C               	goto	u811
  1554  024B  2A4D               	goto	u810
  1555  024C                     u811:
  1556  024C  2A3D               	goto	l1086
  1557  024D                     u810:
  1558  024D  2A4F               	goto	l1092
  1559                           	
  1560  024E                     l201:	
  1561  024E  2A4F               	goto	l1092
  1562                           	line	14
  1563                           	
  1564  024F                     l202:	
  1565                           	line	15
  1566                           	
  1567  024F                     l1092:	
  1568  024F  0824               	movf	(___lwmod@divisor+1),w
  1569  0250  0226               	subwf	(___lwmod@dividend+1),w
  1570  0251  1D03               	skipz
  1571  0252  2A55               	goto	u825
  1572  0253  0823               	movf	(___lwmod@divisor),w
  1573  0254  0225               	subwf	(___lwmod@dividend),w
  1574  0255                     u825:
  1575  0255  1C03               	skipc
  1576  0256  2A58               	goto	u821
  1577  0257  2A59               	goto	u820
  1578  0258                     u821:
  1579  0258  2A60               	goto	l1096
  1580  0259                     u820:
  1581                           	line	16
  1582                           	
  1583  0259                     l1094:	
  1584  0259  0823               	movf	(___lwmod@divisor),w
  1585  025A  02A5               	subwf	(___lwmod@dividend),f
  1586  025B  0824               	movf	(___lwmod@divisor+1),w
  1587  025C  1C03               	skipc
  1588  025D  03A6               	decf	(___lwmod@dividend+1),f
  1589  025E  02A6               	subwf	(___lwmod@dividend+1),f
  1590  025F  2A60               	goto	l1096
  1591                           	
  1592  0260                     l203:	
  1593                           	line	17
  1594                           	
  1595  0260                     l1096:	
  1596  0260  3001               	movlw	01h
  1597                           	
  1598  0261                     u835:
  1599  0261  1003               	clrc
  1600  0262  0CA4               	rrf	(___lwmod@divisor+1),f
  1601  0263  0CA3               	rrf	(___lwmod@divisor),f
  1602  0264  3EFF               	addlw	-1
  1603  0265  1D03               	skipz
  1604  0266  2A61               	goto	u835
  1605                           	line	18
  1606                           	
  1607  0267                     l1098:	
  1608  0267  3001               	movlw	low(01h)
  1609  0268  02A8               	subwf	(___lwmod@counter),f
  1610  0269  1D03               	btfss	status,2
  1611  026A  2A6C               	goto	u841
  1612  026B  2A6D               	goto	u840
  1613  026C                     u841:
  1614  026C  2A4F               	goto	l1092
  1615  026D                     u840:
  1616  026D  2A6F               	goto	l1100
  1617                           	
  1618  026E                     l204:	
  1619  026E  2A6F               	goto	l1100
  1620                           	line	19
  1621                           	
  1622  026F                     l198:	
  1623                           	line	20
  1624                           	
  1625  026F                     l1100:	
  1626  026F  0826               	movf	(___lwmod@dividend+1),w
  1627  0270  01A4               	clrf	(?___lwmod+1)
  1628  0271  07A4               	addwf	(?___lwmod+1)
  1629  0272  0825               	movf	(___lwmod@dividend),w
  1630  0273  01A3               	clrf	(?___lwmod)
  1631  0274  07A3               	addwf	(?___lwmod)
  1632                           
  1633  0275  2A76               	goto	l205
  1634                           	
  1635  0276                     l1102:	
  1636                           	line	21
  1637                           	
  1638  0276                     l205:	
  1639  0276  0008               	return
  1640                           	opt stack 0
  1641                           GLOBAL	__end_of___lwmod
  1642  0277                     	__end_of___lwmod:
  1643                           	signat	___lwmod,8314
  1644                           	global	___lwdiv
  1645                           
  1646 ;; *************** function ___lwdiv *****************
  1647 ;; Defined at:
  1648 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.11\sources\lwdiv.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  divisor         2    4[COMMON] unsigned int 
  1651 ;;  dividend        2    6[COMMON] unsigned int 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  quotient        2    0[BANK0 ] unsigned int 
  1654 ;;  counter         1    2[BANK0 ] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  2    4[COMMON] unsigned int 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1664 ;;      Params:         4       0       0       0
  1665 ;;      Locals:         0       3       0       0
  1666 ;;      Temps:          1       0       0       0
  1667 ;;      Totals:         5       3       0       0
  1668 ;;Total ram usage:        8 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    1
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_printf
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           psect	text240,local,class=CODE,delta=2,merge=1
  1678                           global __ptext240
  1679  01E3                     __ptext240:	;psect for function ___lwdiv
  1680                           psect	text240
  1681                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.11\sources\lwdiv.c"
  1682                           	line	5
  1683                           	global	__size_of___lwdiv
  1684  004F                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  1685                           	
  1686  01E3                     ___lwdiv:	
  1687                           	opt	stack 5
  1688                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1689                           	line	9
  1690                           	
  1691  01E3                     l890:	
  1692  01E3  1283               	bcf	status, 5	;RP0=0, select bank0
  1693  01E4  1303               	bcf	status, 6	;RP1=0, select bank0
  1694  01E5  01A0               	clrf	(___lwdiv@quotient)
  1695  01E6  01A1               	clrf	(___lwdiv@quotient+1)
  1696                           	line	10
  1697                           	
  1698  01E7                     l892:	
  1699  01E7  0875               	movf	(___lwdiv@divisor+1),w
  1700  01E8  0474               	iorwf	(___lwdiv@divisor),w
  1701  01E9  1903               	skipnz
  1702  01EA  29EC               	goto	u461
  1703  01EB  29ED               	goto	u460
  1704  01EC                     u461:
  1705  01EC  2A2A               	goto	l912
  1706  01ED                     u460:
  1707                           	line	11
  1708                           	
  1709  01ED                     l894:	
  1710  01ED  01A2               	clrf	(___lwdiv@counter)
  1711  01EE  0AA2               	incf	(___lwdiv@counter),f
  1712                           	line	12
  1713  01EF  29FC               	goto	l900
  1714                           	
  1715  01F0                     l190:	
  1716                           	line	13
  1717                           	
  1718  01F0                     l896:	
  1719  01F0  3001               	movlw	01h
  1720                           	
  1721  01F1                     u475:
  1722  01F1  1003               	clrc
  1723  01F2  0DF4               	rlf	(___lwdiv@divisor),f
  1724  01F3  0DF5               	rlf	(___lwdiv@divisor+1),f
  1725  01F4  3EFF               	addlw	-1
  1726  01F5  1D03               	skipz
  1727  01F6  29F1               	goto	u475
  1728                           	line	14
  1729                           	
  1730  01F7                     l898:	
  1731  01F7  3001               	movlw	(01h)
  1732  01F8  00F8               	movwf	(??___lwdiv+0)+0
  1733  01F9  0878               	movf	(??___lwdiv+0)+0,w
  1734  01FA  07A2               	addwf	(___lwdiv@counter),f
  1735  01FB  29FC               	goto	l900
  1736                           	line	15
  1737                           	
  1738  01FC                     l189:	
  1739                           	line	12
  1740                           	
  1741  01FC                     l900:	
  1742  01FC  1FF5               	btfss	(___lwdiv@divisor+1),(15)&7
  1743  01FD  29FF               	goto	u481
  1744  01FE  2A00               	goto	u480
  1745  01FF                     u481:
  1746  01FF  29F0               	goto	l896
  1747  0200                     u480:
  1748  0200  2A02               	goto	l902
  1749                           	
  1750  0201                     l191:	
  1751  0201  2A02               	goto	l902
  1752                           	line	16
  1753                           	
  1754  0202                     l192:	
  1755                           	line	17
  1756                           	
  1757  0202                     l902:	
  1758  0202  3001               	movlw	01h
  1759                           	
  1760  0203                     u495:
  1761  0203  1003               	clrc
  1762  0204  0DA0               	rlf	(___lwdiv@quotient),f
  1763  0205  0DA1               	rlf	(___lwdiv@quotient+1),f
  1764  0206  3EFF               	addlw	-1
  1765  0207  1D03               	skipz
  1766  0208  2A03               	goto	u495
  1767                           	line	18
  1768  0209  0875               	movf	(___lwdiv@divisor+1),w
  1769  020A  0277               	subwf	(___lwdiv@dividend+1),w
  1770  020B  1D03               	skipz
  1771  020C  2A0F               	goto	u505
  1772  020D  0874               	movf	(___lwdiv@divisor),w
  1773  020E  0276               	subwf	(___lwdiv@dividend),w
  1774  020F                     u505:
  1775  020F  1C03               	skipc
  1776  0210  2A12               	goto	u501
  1777  0211  2A13               	goto	u500
  1778  0212                     u501:
  1779  0212  2A1B               	goto	l908
  1780  0213                     u500:
  1781                           	line	19
  1782                           	
  1783  0213                     l904:	
  1784  0213  0874               	movf	(___lwdiv@divisor),w
  1785  0214  02F6               	subwf	(___lwdiv@dividend),f
  1786  0215  0875               	movf	(___lwdiv@divisor+1),w
  1787  0216  1C03               	skipc
  1788  0217  03F7               	decf	(___lwdiv@dividend+1),f
  1789  0218  02F7               	subwf	(___lwdiv@dividend+1),f
  1790                           	line	20
  1791                           	
  1792  0219                     l906:	
  1793  0219  1420               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  1794  021A  2A1B               	goto	l908
  1795                           	line	21
  1796                           	
  1797  021B                     l193:	
  1798                           	line	22
  1799                           	
  1800  021B                     l908:	
  1801  021B  3001               	movlw	01h
  1802                           	
  1803  021C                     u515:
  1804  021C  1003               	clrc
  1805  021D  0CF5               	rrf	(___lwdiv@divisor+1),f
  1806  021E  0CF4               	rrf	(___lwdiv@divisor),f
  1807  021F  3EFF               	addlw	-1
  1808  0220  1D03               	skipz
  1809  0221  2A1C               	goto	u515
  1810                           	line	23
  1811                           	
  1812  0222                     l910:	
  1813  0222  3001               	movlw	low(01h)
  1814  0223  02A2               	subwf	(___lwdiv@counter),f
  1815  0224  1D03               	btfss	status,2
  1816  0225  2A27               	goto	u521
  1817  0226  2A28               	goto	u520
  1818  0227                     u521:
  1819  0227  2A02               	goto	l902
  1820  0228                     u520:
  1821  0228  2A2A               	goto	l912
  1822                           	
  1823  0229                     l194:	
  1824  0229  2A2A               	goto	l912
  1825                           	line	24
  1826                           	
  1827  022A                     l188:	
  1828                           	line	25
  1829                           	
  1830  022A                     l912:	
  1831  022A  0821               	movf	(___lwdiv@quotient+1),w
  1832  022B  01F5               	clrf	(?___lwdiv+1)
  1833  022C  07F5               	addwf	(?___lwdiv+1)
  1834  022D  0820               	movf	(___lwdiv@quotient),w
  1835  022E  01F4               	clrf	(?___lwdiv)
  1836  022F  07F4               	addwf	(?___lwdiv)
  1837                           
  1838  0230  2A31               	goto	l195
  1839                           	
  1840  0231                     l914:	
  1841                           	line	26
  1842                           	
  1843  0231                     l195:	
  1844  0231  0008               	return
  1845                           	opt stack 0
  1846                           GLOBAL	__end_of___lwdiv
  1847  0232                     	__end_of___lwdiv:
  1848                           	signat	___lwdiv,8314
  1849                           	global	___awdiv
  1850                           
  1851 ;; *************** function ___awdiv *****************
  1852 ;; Defined at:
  1853 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.11\sources\awdiv.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;  divisor         2    4[COMMON] int 
  1856 ;;  dividend        2    6[COMMON] int 
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  quotient        2    2[BANK0 ] int 
  1859 ;;  sign            1    1[BANK0 ] unsigned char 
  1860 ;;  counter         1    0[BANK0 ] unsigned char 
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  2    4[COMMON] int 
  1863 ;; Registers used:
  1864 ;;		wreg, status,2, status,0
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1870 ;;      Params:         4       0       0       0
  1871 ;;      Locals:         0       4       0       0
  1872 ;;      Temps:          1       0       0       0
  1873 ;;      Totals:         5       4       0       0
  1874 ;;Total ram usage:        9 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; Hardware stack levels required when called:    1
  1877 ;; This function calls:
  1878 ;;		Nothing
  1879 ;; This function is called by:
  1880 ;;		_main
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           psect	text241,local,class=CODE,delta=2,merge=1
  1884                           global __ptext241
  1885  016F                     __ptext241:	;psect for function ___awdiv
  1886                           psect	text241
  1887                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.11\sources\awdiv.c"
  1888                           	line	5
  1889                           	global	__size_of___awdiv
  1890  0074                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  1891                           	
  1892  016F                     ___awdiv:	
  1893                           	opt	stack 6
  1894                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1895                           	line	9
  1896                           	
  1897  016F                     l938:	
  1898  016F  1283               	bcf	status, 5	;RP0=0, select bank0
  1899  0170  1303               	bcf	status, 6	;RP1=0, select bank0
  1900  0171  01A1               	clrf	(___awdiv@sign)
  1901                           	line	10
  1902  0172  1FF5               	btfss	(___awdiv@divisor+1),7
  1903  0173  2975               	goto	u591
  1904  0174  2976               	goto	u590
  1905  0175                     u591:
  1906  0175  297E               	goto	l944
  1907  0176                     u590:
  1908                           	line	11
  1909                           	
  1910  0176                     l940:	
  1911  0176  09F4               	comf	(___awdiv@divisor),f
  1912  0177  09F5               	comf	(___awdiv@divisor+1),f
  1913  0178  0AF4               	incf	(___awdiv@divisor),f
  1914  0179  1903               	skipnz
  1915  017A  0AF5               	incf	(___awdiv@divisor+1),f
  1916                           	line	12
  1917                           	
  1918  017B                     l942:	
  1919  017B  01A1               	clrf	(___awdiv@sign)
  1920  017C  0AA1               	incf	(___awdiv@sign),f
  1921  017D  297E               	goto	l944
  1922                           	line	13
  1923                           	
  1924  017E                     l322:	
  1925                           	line	14
  1926                           	
  1927  017E                     l944:	
  1928  017E  1FF7               	btfss	(___awdiv@dividend+1),7
  1929  017F  2981               	goto	u601
  1930  0180  2982               	goto	u600
  1931  0181                     u601:
  1932  0181  298C               	goto	l950
  1933  0182                     u600:
  1934                           	line	15
  1935                           	
  1936  0182                     l946:	
  1937  0182  09F6               	comf	(___awdiv@dividend),f
  1938  0183  09F7               	comf	(___awdiv@dividend+1),f
  1939  0184  0AF6               	incf	(___awdiv@dividend),f
  1940  0185  1903               	skipnz
  1941  0186  0AF7               	incf	(___awdiv@dividend+1),f
  1942                           	line	16
  1943                           	
  1944  0187                     l948:	
  1945  0187  3001               	movlw	(01h)
  1946  0188  00F8               	movwf	(??___awdiv+0)+0
  1947  0189  0878               	movf	(??___awdiv+0)+0,w
  1948  018A  06A1               	xorwf	(___awdiv@sign),f
  1949  018B  298C               	goto	l950
  1950                           	line	17
  1951                           	
  1952  018C                     l323:	
  1953                           	line	18
  1954                           	
  1955  018C                     l950:	
  1956  018C  01A2               	clrf	(___awdiv@quotient)
  1957  018D  01A3               	clrf	(___awdiv@quotient+1)
  1958                           	line	19
  1959                           	
  1960  018E                     l952:	
  1961  018E  0875               	movf	(___awdiv@divisor+1),w
  1962  018F  0474               	iorwf	(___awdiv@divisor),w
  1963  0190  1903               	skipnz
  1964  0191  2993               	goto	u611
  1965  0192  2994               	goto	u610
  1966  0193                     u611:
  1967  0193  29D1               	goto	l972
  1968  0194                     u610:
  1969                           	line	20
  1970                           	
  1971  0194                     l954:	
  1972  0194  01A0               	clrf	(___awdiv@counter)
  1973  0195  0AA0               	incf	(___awdiv@counter),f
  1974                           	line	21
  1975  0196  29A3               	goto	l960
  1976                           	
  1977  0197                     l326:	
  1978                           	line	22
  1979                           	
  1980  0197                     l956:	
  1981  0197  3001               	movlw	01h
  1982                           	
  1983  0198                     u625:
  1984  0198  1003               	clrc
  1985  0199  0DF4               	rlf	(___awdiv@divisor),f
  1986  019A  0DF5               	rlf	(___awdiv@divisor+1),f
  1987  019B  3EFF               	addlw	-1
  1988  019C  1D03               	skipz
  1989  019D  2998               	goto	u625
  1990                           	line	23
  1991                           	
  1992  019E                     l958:	
  1993  019E  3001               	movlw	(01h)
  1994  019F  00F8               	movwf	(??___awdiv+0)+0
  1995  01A0  0878               	movf	(??___awdiv+0)+0,w
  1996  01A1  07A0               	addwf	(___awdiv@counter),f
  1997  01A2  29A3               	goto	l960
  1998                           	line	24
  1999                           	
  2000  01A3                     l325:	
  2001                           	line	21
  2002                           	
  2003  01A3                     l960:	
  2004  01A3  1FF5               	btfss	(___awdiv@divisor+1),(15)&7
  2005  01A4  29A6               	goto	u631
  2006  01A5  29A7               	goto	u630
  2007  01A6                     u631:
  2008  01A6  2997               	goto	l956
  2009  01A7                     u630:
  2010  01A7  29A9               	goto	l962
  2011                           	
  2012  01A8                     l327:	
  2013  01A8  29A9               	goto	l962
  2014                           	line	25
  2015                           	
  2016  01A9                     l328:	
  2017                           	line	26
  2018                           	
  2019  01A9                     l962:	
  2020  01A9  3001               	movlw	01h
  2021                           	
  2022  01AA                     u645:
  2023  01AA  1003               	clrc
  2024  01AB  0DA2               	rlf	(___awdiv@quotient),f
  2025  01AC  0DA3               	rlf	(___awdiv@quotient+1),f
  2026  01AD  3EFF               	addlw	-1
  2027  01AE  1D03               	skipz
  2028  01AF  29AA               	goto	u645
  2029                           	line	27
  2030  01B0  0875               	movf	(___awdiv@divisor+1),w
  2031  01B1  0277               	subwf	(___awdiv@dividend+1),w
  2032  01B2  1D03               	skipz
  2033  01B3  29B6               	goto	u655
  2034  01B4  0874               	movf	(___awdiv@divisor),w
  2035  01B5  0276               	subwf	(___awdiv@dividend),w
  2036  01B6                     u655:
  2037  01B6  1C03               	skipc
  2038  01B7  29B9               	goto	u651
  2039  01B8  29BA               	goto	u650
  2040  01B9                     u651:
  2041  01B9  29C2               	goto	l968
  2042  01BA                     u650:
  2043                           	line	28
  2044                           	
  2045  01BA                     l964:	
  2046  01BA  0874               	movf	(___awdiv@divisor),w
  2047  01BB  02F6               	subwf	(___awdiv@dividend),f
  2048  01BC  0875               	movf	(___awdiv@divisor+1),w
  2049  01BD  1C03               	skipc
  2050  01BE  03F7               	decf	(___awdiv@dividend+1),f
  2051  01BF  02F7               	subwf	(___awdiv@dividend+1),f
  2052                           	line	29
  2053                           	
  2054  01C0                     l966:	
  2055  01C0  1422               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  2056  01C1  29C2               	goto	l968
  2057                           	line	30
  2058                           	
  2059  01C2                     l329:	
  2060                           	line	31
  2061                           	
  2062  01C2                     l968:	
  2063  01C2  3001               	movlw	01h
  2064                           	
  2065  01C3                     u665:
  2066  01C3  1003               	clrc
  2067  01C4  0CF5               	rrf	(___awdiv@divisor+1),f
  2068  01C5  0CF4               	rrf	(___awdiv@divisor),f
  2069  01C6  3EFF               	addlw	-1
  2070  01C7  1D03               	skipz
  2071  01C8  29C3               	goto	u665
  2072                           	line	32
  2073                           	
  2074  01C9                     l970:	
  2075  01C9  3001               	movlw	low(01h)
  2076  01CA  02A0               	subwf	(___awdiv@counter),f
  2077  01CB  1D03               	btfss	status,2
  2078  01CC  29CE               	goto	u671
  2079  01CD  29CF               	goto	u670
  2080  01CE                     u671:
  2081  01CE  29A9               	goto	l962
  2082  01CF                     u670:
  2083  01CF  29D1               	goto	l972
  2084                           	
  2085  01D0                     l330:	
  2086  01D0  29D1               	goto	l972
  2087                           	line	33
  2088                           	
  2089  01D1                     l324:	
  2090                           	line	34
  2091                           	
  2092  01D1                     l972:	
  2093  01D1  0821               	movf	(___awdiv@sign),w
  2094  01D2  1D03               	skipz
  2095  01D3  29D5               	goto	u680
  2096  01D4  29DB               	goto	l976
  2097  01D5                     u680:
  2098                           	line	35
  2099                           	
  2100  01D5                     l974:	
  2101  01D5  09A2               	comf	(___awdiv@quotient),f
  2102  01D6  09A3               	comf	(___awdiv@quotient+1),f
  2103  01D7  0AA2               	incf	(___awdiv@quotient),f
  2104  01D8  1903               	skipnz
  2105  01D9  0AA3               	incf	(___awdiv@quotient+1),f
  2106  01DA  29DB               	goto	l976
  2107                           	
  2108  01DB                     l331:	
  2109                           	line	36
  2110                           	
  2111  01DB                     l976:	
  2112  01DB  0823               	movf	(___awdiv@quotient+1),w
  2113  01DC  01F5               	clrf	(?___awdiv+1)
  2114  01DD  07F5               	addwf	(?___awdiv+1)
  2115  01DE  0822               	movf	(___awdiv@quotient),w
  2116  01DF  01F4               	clrf	(?___awdiv)
  2117  01E0  07F4               	addwf	(?___awdiv)
  2118                           
  2119  01E1  29E2               	goto	l332
  2120                           	
  2121  01E2                     l978:	
  2122                           	line	37
  2123                           	
  2124  01E2                     l332:	
  2125  01E2  0008               	return
  2126                           	opt stack 0
  2127                           GLOBAL	__end_of___awdiv
  2128  01E3                     	__end_of___awdiv:
  2129                           	signat	___awdiv,8314
  2130                           	global	_isr
  2131                           
  2132 ;; *************** function _isr *****************
  2133 ;; Defined at:
  2134 ;;		line 41 in file "main.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;		None
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;		None               void
  2141 ;; Registers used:
  2142 ;;		None
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2148 ;;      Params:         0       0       0       0
  2149 ;;      Locals:         0       0       0       0
  2150 ;;      Temps:          4       0       0       0
  2151 ;;      Totals:         4       0       0       0
  2152 ;;Total ram usage:        4 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		Interrupt level 1
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           psect	text242,local,class=CODE,delta=2,merge=1
  2161                           global __ptext242
  2162  02A7                     __ptext242:	;psect for function _isr
  2163                           psect	text242
  2164                           	file	"main.c"
  2165                           	line	41
  2166                           	global	__size_of_isr
  2167  000B                     	__size_of_isr	equ	__end_of_isr-_isr
  2168                           	
  2169  02A7                     _isr:	
  2170                           	opt	stack 5
  2171                           ; Regs used in _isr: []
  2172                           psect	intentry,class=CODE,delta=2
  2173                           global __pintentry
  2174  0004                     __pintentry:
  2175                           global interrupt_function
  2176  0004                     interrupt_function:
  2177                           	global saved_w
  2178  007E                     	saved_w	set	btemp+0
  2179  0004  00FE               	movwf	saved_w
  2180  0005  0E03               	swapf	status,w
  2181  0006  00F0               	movwf	(??_isr+0)
  2182  0007  0804               	movf	fsr0,w
  2183  0008  00F1               	movwf	(??_isr+1)
  2184  0009  080A               	movf	pclath,w
  2185  000A  00F2               	movwf	(??_isr+2)
  2186  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  2187  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  2188  000D  087F               	movf	btemp+1,w
  2189  000E  00F3               	movwf	(??_isr+3)
  2190  000F  118A  2AA7         	ljmp	_isr
  2191                           psect	text242
  2192                           	line	43
  2193                           	
  2194  02A7                     i1l51:	
  2195  02A7  0873               	movf	(??_isr+3),w
  2196  02A8  00FF               	movwf	btemp+1
  2197  02A9  0872               	movf	(??_isr+2),w
  2198  02AA  008A               	movwf	pclath
  2199  02AB  0871               	movf	(??_isr+1),w
  2200  02AC  0084               	movwf	fsr0
  2201  02AD  0E70               	swapf	(??_isr+0)^0FFFFFF80h,w
  2202  02AE  0083               	movwf	status
  2203  02AF  0EFE               	swapf	saved_w,f
  2204  02B0  0E7E               	swapf	saved_w,w
  2205  02B1  0009               	retfie
  2206                           	opt stack 0
  2207                           GLOBAL	__end_of_isr
  2208  02B2                     	__end_of_isr:
  2209                           	signat	_isr,88
  2210                           psect	text243,local,class=CODE,delta=2,merge=1
  2211                           global __ptext243
  2212  0000                     __ptext243:	;psect for function _isr
  2213                           	global	btemp
  2214  007E                     	btemp set 07Eh
  2215                           
  2216                           	DABS	1,126,2	;btemp
  2217                           	global	wtemp0
  2218  007E                     	wtemp0 set btemp


Data Sizes:
    Strings     18
    Constant    10
    Data        0
    BSS         1
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     29      32
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___lwmod	unsigned int  size(1) Largest target is 0

    ?___awdiv	int  size(1) Largest target is 0

    printf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), 

    ?_printf	int  size(1) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    S252$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->___awdiv
    _printf->___lwdiv
    ___lwmod->___lwdiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1279
                                             25 BANK0      4     4      0
                            ___awdiv
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              16    12      4     979
                                              9 BANK0     16    12      4
                              _putch
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     232
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     162
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     300
                                              4 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _printf
     _putch
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       2       2        0.0%
BANK0               50     1D      20       3       40.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      2A       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      2C      10        0.0%


Microchip Technology PIC Macro Assembler V1.11 build 48931 
Symbol Table                                                                                   Thu Jan 17 12:26:12 2013

                      pc 0002              __CFG_CP$OFF 0000                       l60 0164  
                     l45 029F                       l61 016C                       l46 029F  
                     l62 016D                       l54 012C                       l47 02A6  
                     l63 016D                       l55 0135                       l48 02A6  
                     l80 0029                       l56 0135                       l81 002A  
                     l57 0139                       l74 00D9                       l90 009A  
                     l82 0040                       l58 015D                       l91 00D8  
                     l83 002B                       l75 001B                       l59 015D  
                     l92 00EC                       l84 005A                       l76 0026  
                     l85 0064                       l77 002D                       l93 00ED  
                     l86 0088                       l78 0028                       l79 00ED  
                     l87 007D                       l88 0093                       l89 00CB  
           ___awdiv@sign 0021                       fsr 0004                      l200 023D  
                    l201 024E                      l202 024F                      l203 0260  
                    l204 026E                      l205 0276                      l330 01D0  
                    l322 017E                      l331 01DB                      l323 018C  
                    l332 01E2                      l324 01D1                      l325 01A3  
                    l326 0197                      l190 01F0                      l327 01A8  
                    l191 0201                      l328 01A9                      l192 0202  
                    l329 01C2                      l193 021B                      l194 0229  
                    l195 0231                      l188 022A                      l189 01FC  
                    l198 026F                      l199 0249                      l900 01FC  
                    l910 0222                      l902 0202                      l904 0213  
                    l912 022A                      l914 0231                      l906 0219  
                    l940 0176                      l908 021B                      l950 018C  
                    l942 017B                      l960 01A3                      l952 018E  
                    l944 017E                      l792 029A                      l970 01C9  
                    l962 01A9                      l954 0194                      l946 0182  
                    l938 016F                      l890 01E3                      l964 01BA  
                    l956 0197                      l972 01D1                      l948 0187  
                    l892 01E7                      l974 01D5                      l966 01C0  
                    l958 019E                      l894 01ED                      l990 00F7  
                    l976 01DB                      l968 01C2                      l896 01F0  
                    l992 00F8                      l978 01E2                      l898 01F7  
                    l994 00FB                      l986 00EE                      l996 00FE  
                    l988 00F4                      l998 0101                      u500 0213  
                    u501 0212                      u350 02A5                      u351 02A4  
                    u600 0182                      u520 0228                      u601 0181  
                    u521 0227                      u505 020F                      u610 0194  
           __CFG_CPD$OFF 0000                      u611 0193                      u515 021C  
                    u460 01ED                      u700 0163                      u461 01EC  
                    u701 0162                      u630 01A7                      u710 0021  
                    u631 01A6                      u711 0020                      u480 0200  
                    u720 0050                      u625 0198                      u481 01FF  
                    u721 004F                      u650 01BA                      u810 024D  
                    u730 0062                      u651 01B9                      u475 01F1  
                    u811 024C                      u731 0061                      u820 0259  
                    u740 007B                      u645 01AA                      u821 0258  
                    u805 023E                      u741 007A                      u670 01CF  
                    u590 0176                      u750 0087                      u671 01CE  
                    u655 01B6                      u591 0175                      u495 0203  
                    u751 0086                      u680 01D5                      u840 026D  
                    u760 008E                      u665 01C3                      u841 026C  
                    u825 0255                      u761 008D                      u745 0077  
                    u770 00D7                      u690 0139                      u835 0261  
                    u771 00D6                      u691 0138                      u780 00EB  
                    u781 00EA                      u790 023A                      u791 0239  
                    _isr 02A7                      fsr0 0004                      indf 0000  
           __CFG_IESO$ON 0000                     l1000 0106                     l1010 0127  
                   l1002 0107                     l1100 026F                     l1020 013D  
                   l1012 012A                     l1004 010D                     l1102 0276  
                   l1030 0164                     l1022 013F                     l1014 012C  
                   l1006 0123                     l1040 0021                     l1032 0166  
                   l1024 0142                     l1016 0130                     l1008 0125  
                   l1050 004C                     l1042 002C                     l1034 0168  
                   l1026 0146                     l1018 013B                     l1060 0064  
                   l1052 0050                     l1044 002D                     l1036 0016  
                   l1028 014A                     l1070 008E                     l1062 007C  
                   l1054 0054                     l1046 0040                     l1038 001B  
                   l1072 0093                     l1064 007D                     l1056 005A  
                   l1048 0048                     l1080 00D9                     l1090 0249  
                   l1082 0232                     l1074 009A                     l1066 0081  
                   l1058 0063                     l1092 024F                     l1084 023A  
                   l1076 00C6                     l1068 0088                     l1094 0259  
                   l1086 023D                     l1078 00CB                     l1096 0260  
                   l1088 0244                     l1098 0267                     ?_isr 0070  
                   STR_1 0287                     i1l51 02A7                     _TMR1 000E  
          __CFG_FCMEN$ON 0000                     _main 00EE                     _t_on 003F  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0011  
          __CFG_MCLRE$ON 0000                    ??_isr 0070                    ?_main 0070  
        __end_of___awdiv 01E3            __CFG_WDTE$OFF 0000                    _ANSEL 011E  
        ___awdiv@divisor 0074                    _T1CON 0010          __end_of___lwdiv 0232  
        __end_of___lwmod 0277          ___awdiv@counter 0020                    _TMR1H 000F  
                  _TMR1L 000E                    _TXREG 0019          __end_of_dpowers 0287  
                  _t_off 003E                    _putch 0299                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 02B2  
           __end_of_main 016F                   ??_main 0039                   _CCPR1H 0016  
                 _CCPR1L 0015         ___awdiv@dividend 0076                   ?_putch 0070  
                 _ANSELH 011F           __CFG_PWRTE$OFF 0000                ??___awdiv 0078  
              ??___lwdiv 0078                ??___lwmod 0027         ___awdiv@quotient 0022  
                 _period 003D                   _printf 0013                   _status 0079  
                 saved_w 007E  __end_of__initialization 02B3           __pcstackCOMMON 0070  
          __end_of_putch 02A7           _OPTION_REGbits 0081                  ??_putch 0074  
             __pmaintext 00EE               __pintentry 0004                  _CCP1CON 0017  
                ?_printf 0029               __stringtab 0277                  ___awdiv 016F  
                ___lwdiv 01E3                  ___lwmod 0232          __size_of_printf 00DB  
                _dpowers 027D             __size_of_isr 000B     end_of_initialization 02B3  
                printf@c 0038                  printf@f 0032                _PORTCbits 0007  
              _TRISCbits 0087                _TXSTAbits 0098           __end_of_printf 00EE  
    start_initialization 02B2              __end_of_isr 02B2                 ??_printf 002D  
            __pbssCOMMON 0079            __pcstackBANK0 0020      __end_of__stringdata 0299  
              __pnvBANK0 003D         ___lwdiv@dividend 0076                 ?___awdiv 0074  
              __ptext240 01E3                __ptext241 016F                __ptext242 02A7  
              __ptext243 0000                __ptext237 0013                __ptext238 0299  
              __ptext239 0232                 ?___lwdiv 0074                 ?___lwmod 0023  
              __pstrings 0277         ___lwdiv@quotient 0020           __size_of_putch 000E  
      interrupt_function 0004                 _PIR1bits 000C              __stringbase 027C  
            __stringdata 0287               printf@_val 0034               printf@flag 0031  
             printf@prec 0033         __size_of___awdiv 0074         __size_of___lwdiv 004F  
       __size_of___lwmod 0045       __end_of__stringtab 027D          ___lwdiv@divisor 0074  
        ___lwdiv@counter 0022            __size_of_main 0081                putch@byte 0074  
               intlevel1 0000         ___lwmod@dividend 0025                stringcode 0277  
             _OSCCONbits 008F                 printf@ap 0030          ___lwmod@divisor 0023  
        ___lwmod@counter 0028                 stringdir 0277                 stringtab 0277  
      __CFG_FOSC$INTRCIO 0000  
